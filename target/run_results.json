{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.0", "generated_at": "2024-12-19T18:24:59.248942Z", "invocation_id": "1105edfe-5923-4cb3-b0aa-b5404737947d", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-19T18:24:59.242603Z", "completed_at": "2024-12-19T18:24:59.247757Z"}, {"name": "execute", "started_at": "2024-12-19T18:24:59.247952Z", "completed_at": "2024-12-19T18:24:59.247974Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005898952484130859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ad_intel_dbt.metrics_pipeline", "compiled": true, "compiled_code": "\n\nWITH merged_metrics AS (\n    -- Google Ads data\n    SELECT \n        date as data_date,\n        clicks,\n        impressions as impr,\n        (cost_micros / 1000000.0) as cost,\n        CASE \n            WHEN impressions > 0 THEN ROUND(CAST(((cost_micros / 1000000.0) / impressions) * 1000 AS numeric), 2)\n            ELSE 0 \n        END as cpm,\n        CASE \n            WHEN impressions > 0 THEN ROUND(CAST((clicks::float / impressions) * 100 AS numeric), 2)\n            ELSE 0 \n        END as ctr,\n        CASE \n            WHEN clicks > 0 THEN ROUND(CAST((cost_micros / 1000000.0) / clicks AS numeric), 2)\n            ELSE 0 \n        END as cpc,\n        EXTRACT(MONTH FROM date)::integer as month,\n        EXTRACT(YEAR FROM date)::integer as year,\n        'paid' as paid_organic,\n        'Google Ads' as traffic_source,\n        'Google Ads' as data_source_type,\n        'Google' as platform,\n        customer_id::text as src_account_id,\n        id::text as src_campaign_id,\n        name as src_campaign_name\n    FROM \"postgres\".\"test_googleads_schema\".\"test_googleads_campaings\"\n\n    UNION ALL\n\n    -- Facebook Ads data\n    SELECT \n        date as data_date,\n        clicks,\n        impressions as impr,\n        spend as cost,\n        CASE \n            WHEN impressions > 0 THEN ROUND(CAST((spend / impressions) * 1000 AS numeric), 2)\n            ELSE 0 \n        END as cpm,\n        CASE \n            WHEN impressions > 0 THEN ROUND(CAST((clicks::float / impressions) * 100 AS numeric), 2)\n            ELSE 0 \n        END as ctr,\n        CASE \n            WHEN clicks > 0 THEN ROUND(CAST(spend / clicks AS numeric), 2)\n            ELSE 0 \n        END as cpc,\n        EXTRACT(MONTH FROM date)::integer as month,\n        EXTRACT(YEAR FROM date)::integer as year,\n        'paid' as paid_organic,\n        'Facebook Ads' as traffic_source,\n        'Facebook Ads' as data_source_type,\n        'Facebook' as platform,\n        account_id::text as src_account_id,\n        campaign_id::text as src_campaign_id,\n        campaign_name as src_campaign_name\n    FROM \"postgres\".\"facebook_ads\".\"test_facebook_ads\"\n)\n\nSELECT * FROM merged_metrics", "relation_name": "\"postgres\".\"test_ad_reporting\".\"metrics_pipeline\"", "batch_results": null}], "elapsed_time": 1.9873449802398682, "args": {"introspect": true, "project_dir": "/Users/jacksonwhiting/programming/ad_intel_dbt", "inject_ephemeral_ctes": true, "require_nested_cumulative_type_params": false, "require_resource_names_without_spaces": false, "macro_debugging": false, "select": ["metrics_pipeline"], "log_path": "/Users/jacksonwhiting/programming/ad_intel_dbt/logs", "use_colors": true, "partial_parse_file_diff": true, "printer_width": 80, "log_level_file": "debug", "partial_parse": true, "favor_state": false, "strict_mode": false, "source_freshness_run_project_hooks": false, "state_modified_compare_vars": false, "output": "text", "write_json": true, "require_explicit_package_overrides_for_builtin_materializations": true, "log_file_max_bytes": 10485760, "state_modified_compare_more_unrendered_values": false, "invocation_command": "dbt compile --select metrics_pipeline", "log_format_file": "debug", "static_parser": true, "log_level": "info", "warn_error_options": {"include": [], "exclude": []}, "which": "compile", "profiles_dir": "/Users/jacksonwhiting/.dbt", "log_format": "default", "skip_nodes_if_on_run_start_fails": false, "require_yaml_configuration_for_mf_time_spines": false, "empty": false, "send_anonymous_usage_stats": true, "vars": {}, "cache_selected_only": false, "show_resource_report": false, "version_check": true, "populate_cache": true, "use_colors_file": true, "defer": false, "print": true, "require_batched_execution_for_custom_microbatch_strategy": false, "indirect_selection": "eager", "exclude": [], "quiet": false}}